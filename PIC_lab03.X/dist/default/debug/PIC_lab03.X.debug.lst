

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Nov 10 15:00:10 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.30
    26                           ; Generated 02/06/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F57Q43 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _U1RXB	set	673
    60  0000                     _U1CON1bits	set	684
    61  0000                     _U1CON1	set	684
    62  0000                     _U1CON2	set	685
    63  0000                     _U1CON0bits	set	683
    64  0000                     _U1CON0	set	683
    65  0000                     _U1BRGL	set	686
    66  0000                     _U1BRGH	set	687
    67  0000                     _U1RXPPS	set	626
    68  0000                     _RF0PPS	set	553
    69  0000                     _U1TXB	set	675
    70  0000                     _U1FIFObits	set	688
    71  0000                     _ANSELFbits	set	1064
    72  0000                     _ANSELD	set	1048
    73  0000                     _LATDbits	set	1217
    74  0000                     _TRISFbits	set	1227
    75  0000                     _LATD	set	1217
    76  0000                     _TRISD	set	1225
    77                           
    78                           	psect	smallconst
    79  002500                     __psmallconst:
    80                           	callstack 0
    81  002500  00                 	db	0
    82  002501                     STR_7:
    83                           
    84                           ; BSR set to: 2
    85  002501  0A                 	db	10
    86  002502  0D                 	db	13
    87  002503  41                 	db	65	;'A'
    88  002504  63                 	db	99	;'c'
    89  002505  74                 	db	116	;'t'
    90  002506  69                 	db	105	;'i'
    91  002507  6F                 	db	111	;'o'
    92  002508  6E                 	db	110	;'n'
    93  002509  73                 	db	115	;'s'
    94  00250A  20                 	db	32
    95  00250B  66                 	db	102	;'f'
    96  00250C  6F                 	db	111	;'o'
    97  00250D  72                 	db	114	;'r'
    98  00250E  20                 	db	32
    99  00250F  64                 	db	100	;'d'
   100  002510  30                 	db	48	;'0'
   101  002511  20                 	db	32
   102  002512  63                 	db	99	;'c'
   103  002513  6F                 	db	111	;'o'
   104  002514  6D                 	db	109	;'m'
   105  002515  6D                 	db	109	;'m'
   106  002516  61                 	db	97	;'a'
   107  002517  6E                 	db	110	;'n'
   108  002518  64                 	db	100	;'d'
   109  002519  0D                 	db	13
   110  00251A  00                 	db	0
   111  00251B                     STR_3:
   112                           
   113                           ; BSR set to: 2
   114  00251B  0A                 	db	10
   115  00251C  0D                 	db	13
   116  00251D  41                 	db	65	;'A'
   117  00251E  63                 	db	99	;'c'
   118  00251F  74                 	db	116	;'t'
   119  002520  69                 	db	105	;'i'
   120  002521  6F                 	db	111	;'o'
   121  002522  6E                 	db	110	;'n'
   122  002523  73                 	db	115	;'s'
   123  002524  20                 	db	32
   124  002525  66                 	db	102	;'f'
   125  002526  6F                 	db	111	;'o'
   126  002527  72                 	db	114	;'r'
   127  002528  20                 	db	32
   128  002529  65                 	db	101	;'e'
   129  00252A  30                 	db	48	;'0'
   130  00252B  20                 	db	32
   131  00252C  63                 	db	99	;'c'
   132  00252D  6F                 	db	111	;'o'
   133  00252E  6D                 	db	109	;'m'
   134  00252F  6D                 	db	109	;'m'
   135  002530  61                 	db	97	;'a'
   136  002531  6E                 	db	110	;'n'
   137  002532  64                 	db	100	;'d'
   138  002533  0D                 	db	13
   139  002534  00                 	db	0
   140  002535                     STR_9:
   141                           
   142                           ; BSR set to: 2
   143  002535  0A                 	db	10
   144  002536  0D                 	db	13
   145  002537  41                 	db	65	;'A'
   146  002538  63                 	db	99	;'c'
   147  002539  74                 	db	116	;'t'
   148  00253A  69                 	db	105	;'i'
   149  00253B  6F                 	db	111	;'o'
   150  00253C  6E                 	db	110	;'n'
   151  00253D  73                 	db	115	;'s'
   152  00253E  20                 	db	32
   153  00253F  66                 	db	102	;'f'
   154  002540  6F                 	db	111	;'o'
   155  002541  72                 	db	114	;'r'
   156  002542  20                 	db	32
   157  002543  64                 	db	100	;'d'
   158  002544  31                 	db	49	;'1'
   159  002545  20                 	db	32
   160  002546  63                 	db	99	;'c'
   161  002547  6F                 	db	111	;'o'
   162  002548  6D                 	db	109	;'m'
   163  002549  6D                 	db	109	;'m'
   164  00254A  61                 	db	97	;'a'
   165  00254B  6E                 	db	110	;'n'
   166  00254C  64                 	db	100	;'d'
   167  00254D  0D                 	db	13
   168  00254E  00                 	db	0
   169  00254F                     STR_5:
   170                           
   171                           ; BSR set to: 2
   172  00254F  0A                 	db	10
   173  002550  0D                 	db	13
   174  002551  41                 	db	65	;'A'
   175  002552  63                 	db	99	;'c'
   176  002553  74                 	db	116	;'t'
   177  002554  69                 	db	105	;'i'
   178  002555  6F                 	db	111	;'o'
   179  002556  6E                 	db	110	;'n'
   180  002557  73                 	db	115	;'s'
   181  002558  20                 	db	32
   182  002559  66                 	db	102	;'f'
   183  00255A  6F                 	db	111	;'o'
   184  00255B  72                 	db	114	;'r'
   185  00255C  20                 	db	32
   186  00255D  65                 	db	101	;'e'
   187  00255E  31                 	db	49	;'1'
   188  00255F  20                 	db	32
   189  002560  63                 	db	99	;'c'
   190  002561  6F                 	db	111	;'o'
   191  002562  6D                 	db	109	;'m'
   192  002563  6D                 	db	109	;'m'
   193  002564  61                 	db	97	;'a'
   194  002565  6E                 	db	110	;'n'
   195  002566  64                 	db	100	;'d'
   196  002567  0D                 	db	13
   197  002568  00                 	db	0
   198  002569                     STR_1:
   199                           
   200                           ; BSR set to: 2
   201  002569  55                 	db	85	;'U'
   202  00256A  41                 	db	65	;'A'
   203  00256B  52                 	db	82	;'R'
   204  00256C  54                 	db	84	;'T'
   205  00256D  20                 	db	32
   206  00256E  69                 	db	105	;'i'
   207  00256F  73                 	db	115	;'s'
   208  002570  20                 	db	32
   209  002571  75                 	db	117	;'u'
   210  002572  70                 	db	112	;'p'
   211  002573  20                 	db	32
   212  002574  61                 	db	97	;'a'
   213  002575  6E                 	db	110	;'n'
   214  002576  64                 	db	100	;'d'
   215  002577  20                 	db	32
   216  002578  72                 	db	114	;'r'
   217  002579  75                 	db	117	;'u'
   218  00257A  6E                 	db	110	;'n'
   219  00257B  6E                 	db	110	;'n'
   220  00257C  69                 	db	105	;'i'
   221  00257D  6E                 	db	110	;'n'
   222  00257E  67                 	db	103	;'g'
   223  00257F  0D                 	db	13
   224  002580  00                 	db	0
   225  002581                     STR_14:
   226                           
   227                           ; BSR set to: 2
   228  002581  0A                 	db	10
   229  002582  0D                 	db	13
   230  002583  42                 	db	66	;'B'
   231  002584  61                 	db	97	;'a'
   232  002585  64                 	db	100	;'d'
   233  002586  20                 	db	32
   234  002587  63                 	db	99	;'c'
   235  002588  6F                 	db	111	;'o'
   236  002589  6D                 	db	109	;'m'
   237  00258A  6D                 	db	109	;'m'
   238  00258B  61                 	db	97	;'a'
   239  00258C  6E                 	db	110	;'n'
   240  00258D  64                 	db	100	;'d'
   241  00258E  0D                 	db	13
   242  00258F  00                 	db	0
   243  002590                     STR_12:
   244                           
   245                           ; BSR set to: 2
   246  002590  64                 	db	100	;'d'
   247  002591  30                 	db	48	;'0'
   248  002592  64                 	db	100	;'d'
   249  002593  31                 	db	49	;'1'
   250  002594  00                 	db	0
   251  002595                     STR_10:
   252                           
   253                           ; BSR set to: 2
   254  002595  65                 	db	101	;'e'
   255  002596  30                 	db	48	;'0'
   256  002597  65                 	db	101	;'e'
   257  002598  31                 	db	49	;'1'
   258  002599  00                 	db	0
   259  00259A                     STR_6:
   260                           
   261                           ; BSR set to: 2
   262  00259A  64                 	db	100	;'d'
   263  00259B  30                 	db	48	;'0'
   264  00259C  00                 	db	0
   265  00259D                     STR_2:
   266                           
   267                           ; BSR set to: 2
   268  00259D  65                 	db	101	;'e'
   269  00259E  30                 	db	48	;'0'
   270  00259F  00                 	db	0
   271  0025A0                     STR_15:
   272                           
   273                           ; BSR set to: 2
   274  0025A0  25                 	db	37
   275  0025A1  63                 	db	99	;'c'
   276  0025A2  00                 	db	0
   277  0025A3  00                 	db	0	; dummy byte at the end
   278  0000                     
   279                           ; #config settings
   280                           
   281                           	psect	cinit
   282  002CA0                     __pcinit:
   283                           	callstack 0
   284  002CA0                     start_initialization:
   285                           	callstack 0
   286  002CA0                     __initialization:
   287                           	callstack 0
   288                           
   289                           ; Clear objects allocated to BANK5 (32 bytes)
   290  002CA0  EE01  F160         	lfsr	0,__pbssBANK5
   291  002CA4  0E20               	movlw	32
   292  002CA6                     clear_0:
   293  002CA6  6AEE               	clrf	postinc0,c
   294  002CA8  06E8               	decf	wreg,f,c
   295  002CAA  E1FD               	bnz	clear_0
   296                           
   297                           ; Clear objects allocated to COMRAM (8 bytes)
   298  002CAC  EE01  F142         	lfsr	0,__pbssCOMRAM
   299  002CB0  0E08               	movlw	8
   300  002CB2                     clear_1:
   301  002CB2  6AEE               	clrf	postinc0,c
   302  002CB4  06E8               	decf	wreg,f,c
   303  002CB6  E1FD               	bnz	clear_1
   304  002CB8                     end_of_initialization:
   305                           	callstack 0
   306  002CB8                     __end_of__initialization:
   307                           	callstack 0
   308  002CB8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   309  002CBA  6EF8               	movwf	tblptru,c
   310  002CBC  0E25               	movlw	high __Lsmallconst
   311  002CBE  6EF7               	movwf	tblptrh,c
   312  002CC0  0100               	movlb	0
   313  002CC2  EFD2  F012         	goto	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMRAM
   316  000542                     __pbssCOMRAM:
   317                           	callstack 0
   318  000542                     _nout:
   319                           	callstack 0
   320  000542                     	ds	2
   321  000544                     _width:
   322                           	callstack 0
   323  000544                     	ds	2
   324  000546                     _prec:
   325                           	callstack 0
   326  000546                     	ds	2
   327  000548                     _flags:
   328                           	callstack 0
   329  000548                     	ds	2
   330                           
   331                           	psect	bssBANK5
   332  000560                     __pbssBANK5:
   333                           	callstack 0
   334  000560                     	ds	32
   335                           
   336                           	psect	cstackCOMRAM
   337  000501                     __pcstackCOMRAM:
   338                           	callstack 0
   339  000501                     ?_strcmp:
   340                           	callstack 0
   341  000501                     putch@data:
   342                           	callstack 0
   343  000501                     strcmp@l:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x0
   347  000501                     	ds	1
   348  000502                     ?_fputc:
   349                           	callstack 0
   350  000502                     fputc@c:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x1
   354  000502                     	ds	1
   355  000503                     strcmp@r:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x2
   359  000503                     	ds	1
   360  000504                     fputc@fp:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x3
   364  000504                     	ds	1
   365  000505                     ??_strcmp:
   366                           
   367                           ; 1 bytes @ 0x4
   368  000505                     	ds	1
   369  000506                     ??_fputc:
   370                           
   371                           ; 1 bytes @ 0x5
   372  000506                     	ds	5
   373  00050B                     ?_fputs:
   374                           	callstack 0
   375  00050B                     ?_ctoa:
   376                           	callstack 0
   377  00050B                     ctoa@fp:
   378                           	callstack 0
   379  00050B                     fputs@s:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0xA
   383  00050B                     	ds	2
   384  00050D                     ctoa@c:
   385                           	callstack 0
   386  00050D                     fputs@fp:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0xC
   390  00050D                     	ds	1
   391  00050E                     ??_ctoa:
   392                           
   393                           ; 1 bytes @ 0xD
   394  00050E                     	ds	1
   395  00050F                     ??_fputs:
   396  00050F                     ctoa@l:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xE
   400  00050F                     	ds	2
   401  000511                     fputs@c:
   402                           	callstack 0
   403  000511                     ctoa@w:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407  000511                     	ds	1
   408  000512                     fputs@i:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x11
   412  000512                     	ds	1
   413  000513                     ?_vfpfcnvrt:
   414                           	callstack 0
   415  000513                     vfpfcnvrt@fp:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x12
   419  000513                     	ds	1
   420  000514                     puts@s:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x13
   424  000514                     	ds	1
   425  000515                     vfpfcnvrt@fmt:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x14
   429  000515                     	ds	1
   430  000516                     
   431                           ; 1 bytes @ 0x15
   432  000516                     	ds	1
   433  000517                     vfpfcnvrt@ap:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x16
   437  000517                     	ds	1
   438  000518                     _puts$872:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x17
   442  000518                     	ds	1
   443  000519                     ??_vfpfcnvrt:
   444                           
   445                           ; 1 bytes @ 0x18
   446  000519                     	ds	2
   447  00051B                     vfpfcnvrt@c:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x1A
   451  00051B                     	ds	1
   452  00051C                     ?_vfprintf:
   453                           	callstack 0
   454  00051C                     vfprintf@fp:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x1B
   458  00051C                     	ds	2
   459  00051E                     vfprintf@fmt:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x1D
   463  00051E                     	ds	2
   464  000520                     vfprintf@ap:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x1F
   468  000520                     	ds	2
   469  000522                     vfprintf@cfmt:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x21
   473  000522                     	ds	2
   474  000524                     ?_printf:
   475                           	callstack 0
   476  000524                     printf@fmt:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x23
   480  000524                     	ds	4
   481  000528                     
   482                           ; 1 bytes @ 0x27
   483  000528                     	ds	2
   484  00052A                     printf@ap:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x29
   488  00052A                     	ds	2
   489  00052C                     main@cmd:
   490                           	callstack 0
   491                           
   492                           ; 20 bytes @ 0x2B
   493  00052C                     	ds	20
   494  000540                     main@c:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x3F
   498  000540                     	ds	1
   499  000541                     main@i:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x40
   503  000541                     	ds	1
   504                           
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 142 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  cmd            20   43[COMRAM] unsigned char [20]
   515 ;;  i               1   64[COMRAM] unsigned char 
   516 ;;  c               1   63[COMRAM] unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   527 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   529 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   530 ;;Total ram usage:       22 bytes
   531 ;; Hardware stack levels required when called:    6
   532 ;; This function calls:
   533 ;;		_printf
   534 ;;		_puts
   535 ;;		_strcmp
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text0
   542  0025A4                     __ptext0:
   543                           	callstack 0
   544  0025A4                     _main:
   545                           	callstack 122
   546  0025A4                     
   547                           ;main.c: 152:     ANSELD = ANSELD & 0xFC;
   548  0025A4  0104               	movlb	4	; () banked
   549  0025A6  5118               	movf	24,w,b	;volatile
   550  0025A8  0BFC               	andlw	252
   551  0025AA  6F18               	movwf	24,b	;volatile
   552  0025AC                     
   553                           ; BSR set to: 4
   554                           ;main.c: 153:     TRISD = TRISD & 0xFC;
   555  0025AC  50C9               	movf	201,w,c	;volatile
   556  0025AE  0BFC               	andlw	252
   557  0025B0  6EC9               	movwf	201,c	;volatile
   558  0025B2                     
   559                           ; BSR set to: 4
   560                           ;main.c: 154:     LATD = LATD & 0xFC;
   561  0025B2  50C1               	movf	193,w,c	;volatile
   562  0025B4  0BFC               	andlw	252
   563  0025B6  6EC1               	movwf	193,c	;volatile
   564  0025B8                     
   565                           ; BSR set to: 4
   566                           ;main.c: 159:     ANSELFbits.ANSELF0 = 0;
   567  0025B8  9128               	bcf	40,0,b	;volatile
   568  0025BA                     
   569                           ; BSR set to: 4
   570                           ;main.c: 160:     TRISFbits.TRISF0 = 0;
   571  0025BA  90CB               	bcf	203,0,c	;volatile
   572  0025BC                     
   573                           ; BSR set to: 4
   574                           ;main.c: 162:     RF0PPS = 0x20;
   575  0025BC  0E20               	movlw	32
   576  0025BE  0102               	movlb	2	; () banked
   577  0025C0  6F29               	movwf	41,b	;volatile
   578  0025C2                     
   579                           ; BSR set to: 2
   580                           ;main.c: 166:     ANSELFbits.ANSELF1 = 0;
   581  0025C2  0104               	movlb	4	; () banked
   582  0025C4  9328               	bcf	40,1,b	;volatile
   583  0025C6                     
   584                           ; BSR set to: 4
   585                           ;main.c: 167:     TRISFbits.TRISF1 = 1;
   586  0025C6  82CB               	bsf	203,1,c	;volatile
   587  0025C8                     
   588                           ; BSR set to: 4
   589                           ;main.c: 169:     U1RXPPS = 0b00101001;
   590  0025C8  0E29               	movlw	41
   591  0025CA  0102               	movlb	2	; () banked
   592  0025CC  6F72               	movwf	114,b	;volatile
   593  0025CE                     
   594                           ; BSR set to: 2
   595                           ;main.c: 172:     U1BRGH = 0; U1BRGL = 138;
   596  0025CE  0E00               	movlw	0
   597  0025D0  6FAF               	movwf	175,b	;volatile
   598  0025D2                     
   599                           ; BSR set to: 2
   600  0025D2  0E8A               	movlw	138
   601  0025D4  6FAE               	movwf	174,b	;volatile
   602  0025D6                     
   603                           ; BSR set to: 2
   604                           ;main.c: 175:     U1CON0 = 0;
   605  0025D6  0E00               	movlw	0
   606  0025D8  6FAB               	movwf	171,b	;volatile
   607  0025DA                     
   608                           ; BSR set to: 2
   609                           ;main.c: 176:     U1CON0bits.BRGS = 1;
   610  0025DA  8FAB               	bsf	171,7,b	;volatile
   611  0025DC                     
   612                           ; BSR set to: 2
   613                           ;main.c: 177:     U1CON0bits.TXEN = 1;
   614  0025DC  8BAB               	bsf	171,5,b	;volatile
   615  0025DE                     
   616                           ; BSR set to: 2
   617                           ;main.c: 178:     U1CON0bits.RXEN = 1;
   618  0025DE  89AB               	bsf	171,4,b	;volatile
   619  0025E0                     
   620                           ; BSR set to: 2
   621                           ;main.c: 179:     U1CON2 = 0;
   622  0025E0  0E00               	movlw	0
   623  0025E2  6FAD               	movwf	173,b	;volatile
   624  0025E4                     
   625                           ; BSR set to: 2
   626                           ;main.c: 180:     U1CON1 = 0;
   627  0025E4  0E00               	movlw	0
   628  0025E6  6FAC               	movwf	172,b	;volatile
   629  0025E8                     
   630                           ; BSR set to: 2
   631                           ;main.c: 183:     U1CON1bits.ON = 1;
   632  0025E8  8FAC               	bsf	172,7,b	;volatile
   633  0025EA                     
   634                           ; BSR set to: 2
   635                           ;main.c: 215:     puts("UART is up and running\r");
   636  0025EA  0E69               	movlw	low STR_1
   637  0025EC  6E14               	movwf	puts@s^(0+1280),c
   638  0025EE  0E25               	movlw	high STR_1
   639  0025F0  6E15               	movwf	(puts@s+1)^(0+1280),c
   640  0025F2  EC29  F016         	call	_puts	;wreg free
   641  0025F6                     
   642                           ;main.c: 218:     for(i = 0; i < 20; i++) cmd[i] = 0;
   643  0025F6  0E00               	movlw	0
   644  0025F8  6E41               	movwf	main@i^(0+1280),c
   645  0025FA                     l1291:
   646  0025FA  0E2C               	movlw	low main@cmd
   647  0025FC  2441               	addwf	main@i^(0+1280),w,c
   648  0025FE  6ED9               	movwf	fsr2l,c
   649  002600  6ADA               	clrf	fsr2h,c
   650  002602  0E05               	movlw	high main@cmd
   651  002604  22DA               	addwfc	fsr2h,f,c
   652  002606  0E00               	movlw	0
   653  002608  6EDF               	movwf	indf2,c
   654  00260A  2A41               	incf	main@i^(0+1280),f,c
   655  00260C  0E13               	movlw	19
   656  00260E  6441               	cpfsgt	main@i^(0+1280),c
   657  002610  EF0C  F013         	goto	u501
   658  002614  EF0E  F013         	goto	u500
   659  002618                     u501:
   660  002618  EFFD  F012         	goto	l1291
   661  00261C                     u500:
   662  00261C                     l1297:
   663                           
   664                           ;main.c: 219:     i = 0;
   665  00261C  0E00               	movlw	0
   666  00261E  6E41               	movwf	main@i^(0+1280),c
   667  002620                     l56:
   668  002620  0102               	movlb	2	; () banked
   669  002622  B3B0               	btfsc	176,1,b	;volatile
   670  002624  EF16  F013         	goto	u511
   671  002628  EF18  F013         	goto	u510
   672  00262C                     u511:
   673  00262C  EF10  F013         	goto	l56
   674  002630                     u510:
   675  002630                     
   676                           ; BSR set to: 2
   677  002630  F000               	nop		;# 
   678                           
   679                           ;main.c: 229:         c = U1RXB;
   680  002632  0060 FA84  F540    	movff	673,main@c	;volatile
   681  002638                     
   682                           ;main.c: 241:         if (c == 0x0D)
   683  002638  0E0D               	movlw	13
   684  00263A  1840               	xorwf	main@c^(0+1280),w,c
   685  00263C  A4D8               	btfss	status,2,c
   686  00263E  EF23  F013         	goto	u521
   687  002642  EF25  F013         	goto	u520
   688  002646                     u521:
   689  002646  EFEA  F013         	goto	l1357
   690  00264A                     u520:
   691  00264A                     
   692                           ;main.c: 242:         {;main.c: 244:             if (strcmp(cmd, "e0") == 0)
   693  00264A  0E2C               	movlw	low main@cmd
   694  00264C  6E01               	movwf	strcmp@l^(0+1280),c
   695  00264E  0E05               	movlw	high main@cmd
   696  002650  6E02               	movwf	(strcmp@l+1)^(0+1280),c
   697  002652  0E9D               	movlw	low STR_2
   698  002654  6E03               	movwf	strcmp@r^(0+1280),c
   699  002656  0E25               	movlw	high STR_2
   700  002658  6E04               	movwf	(strcmp@r+1)^(0+1280),c
   701  00265A  EC88  F015         	call	_strcmp	;wreg free
   702  00265E  5001               	movf	?_strcmp^(0+1280),w,c
   703  002660  1002               	iorwf	(?_strcmp+1)^(0+1280),w,c
   704  002662  A4D8               	btfss	status,2,c
   705  002664  EF36  F013         	goto	u531
   706  002668  EF38  F013         	goto	u530
   707  00266C                     u531:
   708  00266C  EF41  F013         	goto	l1307
   709  002670                     u530:
   710  002670                     
   711                           ;main.c: 245:             {;main.c: 246:                 puts("\n\rActions for e0 comman
      +                          d\r");
   712  002670  0E1B               	movlw	low STR_3
   713  002672  6E14               	movwf	puts@s^(0+1280),c
   714  002674  0E25               	movlw	high STR_3
   715  002676  6E15               	movwf	(puts@s+1)^(0+1280),c
   716  002678  EC29  F016         	call	_puts	;wreg free
   717  00267C                     
   718                           ;main.c: 247:                 LATDbits.LATD0 = 1;
   719  00267C  80C1               	bsf	193,0,c	;volatile
   720                           
   721                           ;main.c: 248:             }
   722  00267E  EFD5  F013         	goto	l1343
   723  002682                     l1307:
   724  002682  0E2C               	movlw	low main@cmd
   725  002684  6E01               	movwf	strcmp@l^(0+1280),c
   726  002686  0E05               	movlw	high main@cmd
   727  002688  6E02               	movwf	(strcmp@l+1)^(0+1280),c
   728  00268A  0E97               	movlw	low (STR_10+2)
   729  00268C  6E03               	movwf	strcmp@r^(0+1280),c
   730  00268E  0E25               	movlw	high (STR_10+2)
   731  002690  6E04               	movwf	(strcmp@r+1)^(0+1280),c
   732  002692  EC88  F015         	call	_strcmp	;wreg free
   733  002696  5001               	movf	?_strcmp^(0+1280),w,c
   734  002698  1002               	iorwf	(?_strcmp+1)^(0+1280),w,c
   735  00269A  A4D8               	btfss	status,2,c
   736  00269C  EF52  F013         	goto	u541
   737  0026A0  EF54  F013         	goto	u540
   738  0026A4                     u541:
   739  0026A4  EF5D  F013         	goto	l1313
   740  0026A8                     u540:
   741  0026A8                     
   742                           ;main.c: 251:             {;main.c: 252:                 puts("\n\rActions for e1 comman
      +                          d\r");
   743  0026A8  0E4F               	movlw	low STR_5
   744  0026AA  6E14               	movwf	puts@s^(0+1280),c
   745  0026AC  0E25               	movlw	high STR_5
   746  0026AE  6E15               	movwf	(puts@s+1)^(0+1280),c
   747  0026B0  EC29  F016         	call	_puts	;wreg free
   748  0026B4                     
   749                           ;main.c: 253:                 LATDbits.LATD1 = 1;
   750  0026B4  82C1               	bsf	193,1,c	;volatile
   751                           
   752                           ;main.c: 254:             }
   753  0026B6  EFD5  F013         	goto	l1343
   754  0026BA                     l1313:
   755  0026BA  0E2C               	movlw	low main@cmd
   756  0026BC  6E01               	movwf	strcmp@l^(0+1280),c
   757  0026BE  0E05               	movlw	high main@cmd
   758  0026C0  6E02               	movwf	(strcmp@l+1)^(0+1280),c
   759  0026C2  0E9A               	movlw	low STR_6
   760  0026C4  6E03               	movwf	strcmp@r^(0+1280),c
   761  0026C6  0E25               	movlw	high STR_6
   762  0026C8  6E04               	movwf	(strcmp@r+1)^(0+1280),c
   763  0026CA  EC88  F015         	call	_strcmp	;wreg free
   764  0026CE  5001               	movf	?_strcmp^(0+1280),w,c
   765  0026D0  1002               	iorwf	(?_strcmp+1)^(0+1280),w,c
   766  0026D2  A4D8               	btfss	status,2,c
   767  0026D4  EF6E  F013         	goto	u551
   768  0026D8  EF70  F013         	goto	u550
   769  0026DC                     u551:
   770  0026DC  EF79  F013         	goto	l1319
   771  0026E0                     u550:
   772  0026E0                     
   773                           ;main.c: 257:             {;main.c: 258:                 puts("\n\rActions for d0 comman
      +                          d\r");
   774  0026E0  0E01               	movlw	low STR_7
   775  0026E2  6E14               	movwf	puts@s^(0+1280),c
   776  0026E4  0E25               	movlw	high STR_7
   777  0026E6  6E15               	movwf	(puts@s+1)^(0+1280),c
   778  0026E8  EC29  F016         	call	_puts	;wreg free
   779  0026EC                     
   780                           ;main.c: 259:                 LATDbits.LATD0 = 0;
   781  0026EC  90C1               	bcf	193,0,c	;volatile
   782                           
   783                           ;main.c: 260:             }
   784  0026EE  EFD5  F013         	goto	l1343
   785  0026F2                     l1319:
   786  0026F2  0E2C               	movlw	low main@cmd
   787  0026F4  6E01               	movwf	strcmp@l^(0+1280),c
   788  0026F6  0E05               	movlw	high main@cmd
   789  0026F8  6E02               	movwf	(strcmp@l+1)^(0+1280),c
   790  0026FA  0E92               	movlw	low (STR_12+2)
   791  0026FC  6E03               	movwf	strcmp@r^(0+1280),c
   792  0026FE  0E25               	movlw	high (STR_12+2)
   793  002700  6E04               	movwf	(strcmp@r+1)^(0+1280),c
   794  002702  EC88  F015         	call	_strcmp	;wreg free
   795  002706  5001               	movf	?_strcmp^(0+1280),w,c
   796  002708  1002               	iorwf	(?_strcmp+1)^(0+1280),w,c
   797  00270A  A4D8               	btfss	status,2,c
   798  00270C  EF8A  F013         	goto	u561
   799  002710  EF8C  F013         	goto	u560
   800  002714                     u561:
   801  002714  EF95  F013         	goto	l1325
   802  002718                     u560:
   803  002718                     
   804                           ;main.c: 263:             {;main.c: 264:                 puts("\n\rActions for d1 comman
      +                          d\r");
   805  002718  0E35               	movlw	low STR_9
   806  00271A  6E14               	movwf	puts@s^(0+1280),c
   807  00271C  0E25               	movlw	high STR_9
   808  00271E  6E15               	movwf	(puts@s+1)^(0+1280),c
   809  002720  EC29  F016         	call	_puts	;wreg free
   810  002724                     
   811                           ;main.c: 265:                 LATDbits.LATD1 = 0;
   812  002724  92C1               	bcf	193,1,c	;volatile
   813                           
   814                           ;main.c: 266:             }
   815  002726  EFD5  F013         	goto	l1343
   816  00272A                     l1325:
   817  00272A  0E2C               	movlw	low main@cmd
   818  00272C  6E01               	movwf	strcmp@l^(0+1280),c
   819  00272E  0E05               	movlw	high main@cmd
   820  002730  6E02               	movwf	(strcmp@l+1)^(0+1280),c
   821  002732  0E95               	movlw	low STR_10
   822  002734  6E03               	movwf	strcmp@r^(0+1280),c
   823  002736  0E25               	movlw	high STR_10
   824  002738  6E04               	movwf	(strcmp@r+1)^(0+1280),c
   825  00273A  EC88  F015         	call	_strcmp	;wreg free
   826  00273E  5001               	movf	?_strcmp^(0+1280),w,c
   827  002740  1002               	iorwf	(?_strcmp+1)^(0+1280),w,c
   828  002742  A4D8               	btfss	status,2,c
   829  002744  EFA6  F013         	goto	u571
   830  002748  EFA8  F013         	goto	u570
   831  00274C                     u571:
   832  00274C  EFB2  F013         	goto	l1333
   833  002750                     u570:
   834  002750                     
   835                           ;main.c: 268:             {;main.c: 269:                 puts("\n\rActions for d1 comman
      +                          d\r");
   836  002750  0E35               	movlw	low STR_9
   837  002752  6E14               	movwf	puts@s^(0+1280),c
   838  002754  0E25               	movlw	high STR_9
   839  002756  6E15               	movwf	(puts@s+1)^(0+1280),c
   840  002758  EC29  F016         	call	_puts	;wreg free
   841  00275C                     
   842                           ;main.c: 270:                 LATDbits.LATD0 = 1;
   843  00275C  80C1               	bsf	193,0,c	;volatile
   844  00275E                     
   845                           ;main.c: 271:                 LATDbits.LATD1 = 1;
   846  00275E  82C1               	bsf	193,1,c	;volatile
   847                           
   848                           ;main.c: 272:             }
   849  002760  EFD5  F013         	goto	l1343
   850  002764                     l1333:
   851  002764  0E2C               	movlw	low main@cmd
   852  002766  6E01               	movwf	strcmp@l^(0+1280),c
   853  002768  0E05               	movlw	high main@cmd
   854  00276A  6E02               	movwf	(strcmp@l+1)^(0+1280),c
   855  00276C  0E90               	movlw	low STR_12
   856  00276E  6E03               	movwf	strcmp@r^(0+1280),c
   857  002770  0E25               	movlw	high STR_12
   858  002772  6E04               	movwf	(strcmp@r+1)^(0+1280),c
   859  002774  EC88  F015         	call	_strcmp	;wreg free
   860  002778  5001               	movf	?_strcmp^(0+1280),w,c
   861  00277A  1002               	iorwf	(?_strcmp+1)^(0+1280),w,c
   862  00277C  A4D8               	btfss	status,2,c
   863  00277E  EFC3  F013         	goto	u581
   864  002782  EFC5  F013         	goto	u580
   865  002786                     u581:
   866  002786  EFCF  F013         	goto	l1341
   867  00278A                     u580:
   868  00278A                     
   869                           ;main.c: 274:             {;main.c: 275:                 puts("\n\rActions for d1 comman
      +                          d\r");
   870  00278A  0E35               	movlw	low STR_9
   871  00278C  6E14               	movwf	puts@s^(0+1280),c
   872  00278E  0E25               	movlw	high STR_9
   873  002790  6E15               	movwf	(puts@s+1)^(0+1280),c
   874  002792  EC29  F016         	call	_puts	;wreg free
   875  002796                     
   876                           ;main.c: 276:                 LATDbits.LATD0 = 0;
   877  002796  90C1               	bcf	193,0,c	;volatile
   878  002798                     
   879                           ;main.c: 277:                 LATDbits.LATD1 = 0;
   880  002798  92C1               	bcf	193,1,c	;volatile
   881                           
   882                           ;main.c: 278:             }
   883  00279A  EFD5  F013         	goto	l1343
   884  00279E                     l1341:
   885  00279E  0E81               	movlw	low STR_14
   886  0027A0  6E14               	movwf	puts@s^(0+1280),c
   887  0027A2  0E25               	movlw	high STR_14
   888  0027A4  6E15               	movwf	(puts@s+1)^(0+1280),c
   889  0027A6  EC29  F016         	call	_puts	;wreg free
   890  0027AA                     l1343:
   891                           
   892                           ;main.c: 283:             for(i = 0; i < 20; i++) cmd[i] = 0;
   893  0027AA  0E00               	movlw	0
   894  0027AC  6E41               	movwf	main@i^(0+1280),c
   895  0027AE                     l1349:
   896  0027AE  0E2C               	movlw	low main@cmd
   897  0027B0  2441               	addwf	main@i^(0+1280),w,c
   898  0027B2  6ED9               	movwf	fsr2l,c
   899  0027B4  6ADA               	clrf	fsr2h,c
   900  0027B6  0E05               	movlw	high main@cmd
   901  0027B8  22DA               	addwfc	fsr2h,f,c
   902  0027BA  0E00               	movlw	0
   903  0027BC  6EDF               	movwf	indf2,c
   904  0027BE  2A41               	incf	main@i^(0+1280),f,c
   905  0027C0  0E13               	movlw	19
   906  0027C2  6441               	cpfsgt	main@i^(0+1280),c
   907  0027C4  EFE6  F013         	goto	u591
   908  0027C8  EFE8  F013         	goto	u590
   909  0027CC                     u591:
   910  0027CC  EFD7  F013         	goto	l1349
   911  0027D0                     u590:
   912  0027D0  EF0E  F013         	goto	l1297
   913  0027D4                     l1357:
   914  0027D4  0E0A               	movlw	10
   915  0027D6  1840               	xorwf	main@c^(0+1280),w,c
   916  0027D8  B4D8               	btfsc	status,2,c
   917  0027DA  EFF1  F013         	goto	u601
   918  0027DE  EFF3  F013         	goto	u600
   919  0027E2                     u601:
   920  0027E2  EF10  F013         	goto	l56
   921  0027E6                     u600:
   922  0027E6                     
   923                           ;main.c: 289:         {;main.c: 291:             printf("%c", c);
   924  0027E6  0EA0               	movlw	low STR_15
   925  0027E8  6E24               	movwf	printf@fmt^(0+1280),c
   926  0027EA  0E25               	movlw	high STR_15
   927  0027EC  6E25               	movwf	(printf@fmt+1)^(0+1280),c
   928  0027EE  C540  F526         	movff	main@c,?_printf+2
   929  0027F2  6A27               	clrf	(?_printf+3)^(0+1280),c
   930  0027F4  EC63  F016         	call	_printf	;wreg free
   931  0027F8                     
   932                           ;main.c: 292:             cmd[i++] = c;
   933  0027F8  0E2C               	movlw	low main@cmd
   934  0027FA  2441               	addwf	main@i^(0+1280),w,c
   935  0027FC  6ED9               	movwf	fsr2l,c
   936  0027FE  6ADA               	clrf	fsr2h,c
   937  002800  0E05               	movlw	high main@cmd
   938  002802  22DA               	addwfc	fsr2h,f,c
   939  002804  0061  F500  F4DF   	movff	main@c,indf2
   940  00280A  2A41               	incf	main@i^(0+1280),f,c
   941  00280C  EF10  F013         	goto	l56
   942  002810  EFFE  F0FF         	goto	start
   943  002814                     __end_of_main:
   944                           	callstack 0
   945                           
   946 ;; *************** function _strcmp *****************
   947 ;; Defined at:
   948 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strcmp.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  l               2    0[COMRAM] PTR const unsigned char 
   951 ;;		 -> main@cmd(20), 
   952 ;;  r               2    2[COMRAM] PTR const unsigned char 
   953 ;;		 -> STR_12(5), STR_10(5), STR_8(3), STR_6(3), 
   954 ;;		 -> STR_4(3), STR_2(3), 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2    0[COMRAM] int 
   959 ;; Registers used:
   960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   969 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   970 ;;Total ram usage:        5 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text1
   980  002B10                     __ptext1:
   981                           	callstack 0
   982  002B10                     _strcmp:
   983                           	callstack 127
   984  002B10  EF8E  F015         	goto	l1231
   985  002B14                     l1229:
   986  002B14  4A01               	infsnz	strcmp@l^(0+1280),f,c
   987  002B16  2A02               	incf	(strcmp@l+1)^(0+1280),f,c
   988  002B18  4A03               	infsnz	strcmp@r^(0+1280),f,c
   989  002B1A  2A04               	incf	(strcmp@r+1)^(0+1280),f,c
   990  002B1C                     l1231:
   991  002B1C  0061  F404  F4D9   	movff	strcmp@l,fsr2l
   992  002B22  0061  F408  F4DA   	movff	strcmp@l+1,fsr2h
   993  002B28  50DF               	movf	indf2,w,c
   994  002B2A  6E05               	movwf	??_strcmp^(0+1280),c
   995  002B2C  0061  F40C  F4F6   	movff	strcmp@r,tblptrl
   996  002B32  0061  F410  F4F7   	movff	strcmp@r+1,tblptrh
   997  002B38                     	if	0	;tblptru may be non-zero
   998  002B38                     	endif
   999  002B38                     	if	0	;tblptru may be non-zero
  1000  002B38                     	endif
  1001  002B38  0008               	tblrd		*
  1002  002B3A  50F5               	movf	tablat,w,c
  1003  002B3C  1805               	xorwf	??_strcmp^(0+1280),w,c
  1004  002B3E  A4D8               	btfss	status,2,c
  1005  002B40  EFA4  F015         	goto	u481
  1006  002B44  EFA6  F015         	goto	u480
  1007  002B48                     u481:
  1008  002B48  EFB4  F015         	goto	l1235
  1009  002B4C                     u480:
  1010  002B4C  0061  F404  F4D9   	movff	strcmp@l,fsr2l
  1011  002B52  0061  F408  F4DA   	movff	strcmp@l+1,fsr2h
  1012  002B58  50DF               	movf	indf2,w,c
  1013  002B5A  A4D8               	btfss	status,2,c
  1014  002B5C  EFB2  F015         	goto	u491
  1015  002B60  EFB4  F015         	goto	u490
  1016  002B64                     u491:
  1017  002B64  EF8A  F015         	goto	l1229
  1018  002B68                     u490:
  1019  002B68                     l1235:
  1020  002B68  0061  F404  F4D9   	movff	strcmp@l,fsr2l
  1021  002B6E  0061  F408  F4DA   	movff	strcmp@l+1,fsr2h
  1022  002B74  50DF               	movf	indf2,w,c
  1023  002B76  6E05               	movwf	??_strcmp^(0+1280),c
  1024  002B78  0061  F40C  F4F6   	movff	strcmp@r,tblptrl
  1025  002B7E  0061  F410  F4F7   	movff	strcmp@r+1,tblptrh
  1026  002B84                     	if	0	;tblptru may be non-zero
  1027  002B84                     	endif
  1028  002B84                     	if	0	;tblptru may be non-zero
  1029  002B84                     	endif
  1030  002B84  0008               	tblrd		*
  1031  002B86  50F5               	movf	tablat,w,c
  1032  002B88  5C05               	subwf	??_strcmp^(0+1280),w,c
  1033  002B8A  6E01               	movwf	?_strcmp^(0+1280),c
  1034  002B8C  6A02               	clrf	(?_strcmp+1)^(0+1280),c
  1035  002B8E  A0D8               	btfss	status,0,c
  1036  002B90  0602               	decf	(?_strcmp+1)^(0+1280),f,c
  1037  002B92  0012               	return		;funcret
  1038  002B94                     __end_of_strcmp:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _puts *****************
  1042 ;; Defined at:
  1043 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\puts.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  s               2   19[COMRAM] PTR const unsigned char 
  1046 ;;		 -> STR_14(15), STR_13(26), STR_11(26), STR_9(26), 
  1047 ;;		 -> STR_7(26), STR_5(26), STR_3(26), STR_1(24), 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  r               2    0        int 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  2   19[COMRAM] int 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1060 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1062 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1063 ;;Total ram usage:        5 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    3
  1066 ;; This function calls:
  1067 ;;		_fputc
  1068 ;;		_fputs
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text2
  1075  002C52                     __ptext2:
  1076                           	callstack 0
  1077  002C52                     _puts:
  1078                           	callstack 124
  1079  002C52  0E01               	movlw	1
  1080  002C54  6E18               	movwf	_puts$872^(0+1280),c
  1081  002C56  C514  F50B         	movff	puts@s,fputs@s
  1082  002C5A  C515  F50C         	movff	puts@s+1,fputs@s+1
  1083  002C5E  0E00               	movlw	0
  1084  002C60  6E0D               	movwf	fputs@fp^(0+1280),c
  1085  002C62  0E00               	movlw	0
  1086  002C64  6E0E               	movwf	(fputs@fp+1)^(0+1280),c
  1087  002C66  ECFB  F015         	call	_fputs	;wreg free
  1088  002C6A  BE0C               	btfsc	(?_fputs+1)^(0+1280),7,c
  1089  002C6C  EF3A  F016         	goto	u461
  1090  002C70  EF3C  F016         	goto	u460
  1091  002C74                     u461:
  1092  002C74  EF4F  F016         	goto	l844
  1093  002C78                     u460:
  1094  002C78  0E00               	movlw	0
  1095  002C7A  6E03               	movwf	(fputc@c+1)^(0+1280),c
  1096  002C7C  0E0A               	movlw	10
  1097  002C7E  6E02               	movwf	fputc@c^(0+1280),c
  1098  002C80  0E00               	movlw	0
  1099  002C82  6E04               	movwf	fputc@fp^(0+1280),c
  1100  002C84  0E00               	movlw	0
  1101  002C86  6E05               	movwf	(fputc@fp+1)^(0+1280),c
  1102  002C88  EC3A  F015         	call	_fputc	;wreg free
  1103  002C8C  BE03               	btfsc	(?_fputc+1)^(0+1280),7,c
  1104  002C8E  EF4B  F016         	goto	u471
  1105  002C92  EF4D  F016         	goto	u470
  1106  002C96                     u471:
  1107  002C96  EF4F  F016         	goto	l844
  1108  002C9A                     u470:
  1109  002C9A  0E00               	movlw	0
  1110  002C9C  6E18               	movwf	_puts$872^(0+1280),c
  1111  002C9E                     l844:
  1112  002C9E  0012               	return		;funcret
  1113  002CA0                     __end_of_puts:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _fputs *****************
  1117 ;; Defined at:
  1118 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1121 ;;		 -> STR_14(15), STR_13(26), STR_11(26), STR_9(26), 
  1122 ;;		 -> STR_7(26), STR_5(26), STR_3(26), STR_1(24), 
  1123 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1124 ;;		 -> NULL(0), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  i               2   17[COMRAM] int 
  1127 ;;  c               1   16[COMRAM] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  2   10[COMRAM] int 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1138 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1139 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1140 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1141 ;;Total ram usage:        9 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    2
  1144 ;; This function calls:
  1145 ;;		_fputc
  1146 ;; This function is called by:
  1147 ;;		_puts
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text3
  1152  002BF6                     __ptext3:
  1153                           	callstack 0
  1154  002BF6                     _fputs:
  1155                           	callstack 124
  1156  002BF6  0E00               	movlw	0
  1157  002BF8  6E13               	movwf	(fputs@i+1)^(0+1280),c
  1158  002BFA  0E00               	movlw	0
  1159  002BFC  6E12               	movwf	fputs@i^(0+1280),c
  1160  002BFE  EF0C  F016         	goto	l1215
  1161  002C02                     l1211:
  1162  002C02  C511  F502         	movff	fputs@c,fputc@c
  1163  002C06  6A03               	clrf	(fputc@c+1)^(0+1280),c
  1164  002C08  C50D  F504         	movff	fputs@fp,fputc@fp
  1165  002C0C  C50E  F505         	movff	fputs@fp+1,fputc@fp+1
  1166  002C10  EC3A  F015         	call	_fputc	;wreg free
  1167  002C14  4A12               	infsnz	fputs@i^(0+1280),f,c
  1168  002C16  2A13               	incf	(fputs@i+1)^(0+1280),f,c
  1169  002C18                     l1215:
  1170  002C18  5012               	movf	fputs@i^(0+1280),w,c
  1171  002C1A  240B               	addwf	fputs@s^(0+1280),w,c
  1172  002C1C  6E0F               	movwf	??_fputs^(0+1280),c
  1173  002C1E  5013               	movf	(fputs@i+1)^(0+1280),w,c
  1174  002C20  200C               	addwfc	(fputs@s+1)^(0+1280),w,c
  1175  002C22  6E10               	movwf	(??_fputs+1)^(0+1280),c
  1176  002C24  0061  F43C  F4F6   	movff	??_fputs,tblptrl
  1177  002C2A  0061  F440  F4F7   	movff	??_fputs+1,tblptrh
  1178  002C30                     	if	0	;tblptru may be non-zero
  1179  002C30                     	endif
  1180  002C30                     	if	0	;tblptru may be non-zero
  1181  002C30                     	endif
  1182  002C30  0008               	tblrd		*
  1183  002C32  0061 F3D4  F511    	movff	tablat,fputs@c
  1184  002C38  5011               	movf	fputs@c^(0+1280),w,c
  1185  002C3A  A4D8               	btfss	status,2,c
  1186  002C3C  EF22  F016         	goto	u451
  1187  002C40  EF24  F016         	goto	u450
  1188  002C44                     u451:
  1189  002C44  EF01  F016         	goto	l1211
  1190  002C48                     u450:
  1191  002C48  C512  F50B         	movff	fputs@i,?_fputs
  1192  002C4C  C513  F50C         	movff	fputs@i+1,?_fputs+1
  1193  002C50  0012               	return		;funcret
  1194  002C52                     __end_of_fputs:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _printf *****************
  1198 ;; Defined at:
  1199 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  fmt             2   35[COMRAM] PTR const unsigned char 
  1202 ;;		 -> STR_15(3), 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  ap              2   41[COMRAM] PTR void [1]
  1205 ;;		 -> ?_printf(2), 
  1206 ;;  ret             2    0        int 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  2   35[COMRAM] int 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1217 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1219 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1220 ;;Total ram usage:        8 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    5
  1223 ;; This function calls:
  1224 ;;		_vfprintf
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text4
  1231  002CC6                     __ptext4:
  1232                           	callstack 0
  1233  002CC6                     _printf:
  1234                           	callstack 122
  1235  002CC6  0E26               	movlw	low (?_printf+2)
  1236  002CC8  6E2A               	movwf	printf@ap^(0+1280),c
  1237  002CCA  0E05               	movlw	high (?_printf+2)
  1238  002CCC  6E2B               	movwf	(printf@ap+1)^(0+1280),c
  1239  002CCE  0E00               	movlw	0
  1240  002CD0  6E1C               	movwf	vfprintf@fp^(0+1280),c
  1241  002CD2  0E00               	movlw	0
  1242  002CD4  6E1D               	movwf	(vfprintf@fp+1)^(0+1280),c
  1243  002CD6  C524  F51E         	movff	printf@fmt,vfprintf@fmt
  1244  002CDA  C525  F51F         	movff	printf@fmt+1,vfprintf@fmt+1
  1245  002CDE  0E2A               	movlw	low printf@ap
  1246  002CE0  6E20               	movwf	vfprintf@ap^(0+1280),c
  1247  002CE2  0E05               	movlw	high printf@ap
  1248  002CE4  6E21               	movwf	(vfprintf@ap+1)^(0+1280),c
  1249  002CE6  ECCA  F015         	call	_vfprintf	;wreg free
  1250  002CEA  0012               	return		;funcret
  1251  002CEC                     __end_of_printf:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _vfprintf *****************
  1255 ;; Defined at:
  1256 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1259 ;;		 -> NULL(0), 
  1260 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  1261 ;;		 -> STR_15(3), 
  1262 ;;  ap              2   31[COMRAM] PTR PTR void 
  1263 ;;		 -> printf@ap(2), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  cfmt            2   33[COMRAM] PTR unsigned char 
  1266 ;;		 -> STR_15(3), 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2   27[COMRAM] int 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1276 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1279 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1280 ;;Total ram usage:        8 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    4
  1283 ;; This function calls:
  1284 ;;		_vfpfcnvrt
  1285 ;; This function is called by:
  1286 ;;		_printf
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text5
  1291  002B94                     __ptext5:
  1292                           	callstack 0
  1293  002B94                     _vfprintf:
  1294                           	callstack 122
  1295  002B94                     
  1296                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1297  002B94  C51E  F522         	movff	vfprintf@fmt,vfprintf@cfmt
  1298  002B98  C51F  F523         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1299  002B9C                     
  1300                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1301  002B9C  0E00               	movlw	0
  1302  002B9E  6E43               	movwf	(_nout+1)^(0+1280),c
  1303  002BA0  0E00               	movlw	0
  1304  002BA2  6E42               	movwf	_nout^(0+1280),c
  1305                           
  1306                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1307  002BA4  EFE6  F015         	goto	l1207
  1308  002BA8                     l1205:
  1309                           
  1310                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1311  002BA8  C51C  F513         	movff	vfprintf@fp,vfpfcnvrt@fp
  1312  002BAC  C51D  F514         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1313  002BB0  0E22               	movlw	low vfprintf@cfmt
  1314  002BB2  6E15               	movwf	vfpfcnvrt@fmt^(0+1280),c
  1315  002BB4  0E05               	movlw	high vfprintf@cfmt
  1316  002BB6  6E16               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
  1317  002BB8  C520  F517         	movff	vfprintf@ap,vfpfcnvrt@ap
  1318  002BBC  C521  F518         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1319  002BC0  EC0A  F014         	call	_vfpfcnvrt	;wreg free
  1320  002BC4  5013               	movf	?_vfpfcnvrt^(0+1280),w,c
  1321  002BC6  2642               	addwf	_nout^(0+1280),f,c
  1322  002BC8  5014               	movf	(?_vfpfcnvrt+1)^(0+1280),w,c
  1323  002BCA  2243               	addwfc	(_nout+1)^(0+1280),f,c
  1324  002BCC                     l1207:
  1325                           
  1326                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1327  002BCC  0061  F488  F4F6   	movff	vfprintf@cfmt,tblptrl
  1328  002BD2  0061  F48C  F4F7   	movff	vfprintf@cfmt+1,tblptrh
  1329  002BD8                     	if	0	;tblptru may be non-zero
  1330  002BD8                     	endif
  1331  002BD8                     	if	0	;tblptru may be non-zero
  1332  002BD8                     	endif
  1333  002BD8  0008               	tblrd		*
  1334  002BDA  50F5               	movf	tablat,w,c
  1335  002BDC  0900               	iorlw	0
  1336  002BDE  A4D8               	btfss	status,2,c
  1337  002BE0  EFF4  F015         	goto	u441
  1338  002BE4  EFF6  F015         	goto	u440
  1339  002BE8                     u441:
  1340  002BE8  EFD4  F015         	goto	l1205
  1341  002BEC                     u440:
  1342  002BEC                     
  1343                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1344  002BEC  C542  F51C         	movff	_nout,?_vfprintf
  1345  002BF0  C543  F51D         	movff	_nout+1,?_vfprintf+1
  1346  002BF4  0012               	return		;funcret
  1347  002BF6                     __end_of_vfprintf:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _vfpfcnvrt *****************
  1351 ;; Defined at:
  1352 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1355 ;;		 -> NULL(0), 
  1356 ;;  fmt             2   20[COMRAM] PTR PTR unsigned char 
  1357 ;;		 -> vfprintf@cfmt(2), 
  1358 ;;  ap              2   22[COMRAM] PTR PTR void 
  1359 ;;		 -> printf@ap(2), 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  llu             8    0        unsigned long long 
  1362 ;;  ll              8    0        long long 
  1363 ;;  f               4    0        long long 
  1364 ;;  vp              3    0        PTR void 
  1365 ;;  ct              3    0        unsigned char [3]
  1366 ;;  cp              3    0        PTR unsigned char 
  1367 ;;  i               2    0        int 
  1368 ;;  done            2    0        int 
  1369 ;;  c               1   26[COMRAM] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2   18[COMRAM] int 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1379 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1382 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1383 ;;Total ram usage:        9 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    3
  1386 ;; This function calls:
  1387 ;;		_ctoa
  1388 ;;		_fputc
  1389 ;; This function is called by:
  1390 ;;		_vfprintf
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text6
  1395  002814                     __ptext6:
  1396                           	callstack 0
  1397  002814                     _vfpfcnvrt:
  1398                           	callstack 122
  1399  002814                     
  1400                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1401  002814  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1402  00281A  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1403  002820  C4DE F4F6          	movff	postinc2,tblptrl
  1404  002824  C4DD F4F7          	movff	postdec2,tblptrh
  1405  002828                     	if	0	;tblptru may be non-zero
  1406  002828                     	endif
  1407  002828                     	if	0	;tblptru may be non-zero
  1408  002828                     	endif
  1409  002828  0008               	tblrd		*
  1410  00282A  50F5               	movf	tablat,w,c
  1411  00282C  0A25               	xorlw	37
  1412  00282E  A4D8               	btfss	status,2,c
  1413  002830  EF1C  F014         	goto	u411
  1414  002834  EF1E  F014         	goto	u410
  1415  002838                     u411:
  1416  002838  EFB0  F014         	goto	l1193
  1417  00283C                     u410:
  1418  00283C                     
  1419                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1420  00283C  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1421  002842  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1422  002848  2ADE               	incf	postinc2,f,c
  1423  00284A  0E00               	movlw	0
  1424  00284C  22DD               	addwfc	postdec2,f,c
  1425  00284E                     
  1426                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1427  00284E  0E00               	movlw	0
  1428  002850  6E45               	movwf	(_width+1)^(0+1280),c
  1429  002852  0E00               	movlw	0
  1430  002854  6E44               	movwf	_width^(0+1280),c
  1431  002856  C544  F548         	movff	_width,_flags
  1432  00285A  C545  F549         	movff	_width+1,_flags+1
  1433  00285E                     
  1434                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1435  00285E  6846               	setf	_prec^(0+1280),c
  1436  002860  6847               	setf	(_prec+1)^(0+1280),c
  1437  002862                     
  1438                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1439  002862  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1440  002868  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1441  00286E  C4DE F4F6          	movff	postinc2,tblptrl
  1442  002872  C4DD F4F7          	movff	postdec2,tblptrh
  1443  002876                     	if	0	;tblptru may be non-zero
  1444  002876                     	endif
  1445  002876                     	if	0	;tblptru may be non-zero
  1446  002876                     	endif
  1447  002876  0008               	tblrd		*
  1448  002878  50F5               	movf	tablat,w,c
  1449  00287A  0A63               	xorlw	99
  1450  00287C  A4D8               	btfss	status,2,c
  1451  00287E  EF43  F014         	goto	u421
  1452  002882  EF45  F014         	goto	u420
  1453  002886                     u421:
  1454  002886  EF74  F014         	goto	l1177
  1455  00288A                     u420:
  1456  00288A                     
  1457                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1458  00288A  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1459  002890  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1460  002896  2ADE               	incf	postinc2,f,c
  1461  002898  0E00               	movlw	0
  1462  00289A  22DD               	addwfc	postdec2,f,c
  1463                           
  1464                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1465  00289C  0061  F45C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  1466  0028A2  0061  F460  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  1467  0028A8  0061 F37C  F519    	movff	indf2,??_vfpfcnvrt
  1468  0028AE  0E02               	movlw	2
  1469  0028B0  26DE               	addwf	postinc2,f,c
  1470  0028B2  0061 F37C  F51A    	movff	indf2,??_vfpfcnvrt+1
  1471  0028B8  0E00               	movlw	0
  1472  0028BA  22DD               	addwfc	postdec2,f,c
  1473  0028BC  0061  F464  F4D9   	movff	??_vfpfcnvrt,fsr2l
  1474  0028C2  0061  F468  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  1475  0028C8  50DF               	movf	indf2,w,c
  1476  0028CA  6E1B               	movwf	vfpfcnvrt@c^(0+1280),c
  1477  0028CC                     
  1478                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1479  0028CC  C513  F50B         	movff	vfpfcnvrt@fp,ctoa@fp
  1480  0028D0  C514  F50C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1481  0028D4  C51B  F50D         	movff	vfpfcnvrt@c,ctoa@c
  1482  0028D8  ECD0  F014         	call	_ctoa	;wreg free
  1483  0028DC  C50B  F513         	movff	?_ctoa,?_vfpfcnvrt
  1484  0028E0  C50C  F514         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1485  0028E4  EFCF  F014         	goto	l809
  1486  0028E8                     l1177:
  1487                           
  1488                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1489  0028E8  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1490  0028EE  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1491  0028F4  C4DE F4F6          	movff	postinc2,tblptrl
  1492  0028F8  C4DD F4F7          	movff	postdec2,tblptrh
  1493  0028FC                     	if	0	;tblptru may be non-zero
  1494  0028FC                     	endif
  1495  0028FC                     	if	0	;tblptru may be non-zero
  1496  0028FC                     	endif
  1497  0028FC  0008               	tblrd		*
  1498  0028FE  50F5               	movf	tablat,w,c
  1499  002900  0A25               	xorlw	37
  1500  002902  A4D8               	btfss	status,2,c
  1501  002904  EF86  F014         	goto	u431
  1502  002908  EF88  F014         	goto	u430
  1503  00290C                     u431:
  1504  00290C  EFA1  F014         	goto	l1187
  1505  002910                     u430:
  1506  002910                     
  1507                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1508  002910  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1509  002916  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1510  00291C  2ADE               	incf	postinc2,f,c
  1511  00291E  0E00               	movlw	0
  1512  002920  22DD               	addwfc	postdec2,f,c
  1513  002922                     
  1514                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1515  002922  0E00               	movlw	0
  1516  002924  6E03               	movwf	(fputc@c+1)^(0+1280),c
  1517  002926  0E25               	movlw	37
  1518  002928  6E02               	movwf	fputc@c^(0+1280),c
  1519  00292A  C513  F504         	movff	vfpfcnvrt@fp,fputc@fp
  1520  00292E  C514  F505         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1521  002932  EC3A  F015         	call	_fputc	;wreg free
  1522  002936                     l1183:
  1523                           
  1524                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1525  002936  0E00               	movlw	0
  1526  002938  6E14               	movwf	(?_vfpfcnvrt+1)^(0+1280),c
  1527  00293A  0E01               	movlw	1
  1528  00293C  6E13               	movwf	?_vfpfcnvrt^(0+1280),c
  1529  00293E  EFCF  F014         	goto	l809
  1530  002942                     l1187:
  1531                           
  1532                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1533  002942  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1534  002948  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1535  00294E  2ADE               	incf	postinc2,f,c
  1536  002950  0E00               	movlw	0
  1537  002952  22DD               	addwfc	postdec2,f,c
  1538  002954                     
  1539                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1540  002954  0E00               	movlw	0
  1541  002956  6E14               	movwf	(?_vfpfcnvrt+1)^(0+1280),c
  1542  002958  0E00               	movlw	0
  1543  00295A  6E13               	movwf	?_vfpfcnvrt^(0+1280),c
  1544  00295C  EFCF  F014         	goto	l809
  1545  002960                     l1193:
  1546                           
  1547                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1548  002960  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1549  002966  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1550  00296C  C4DE F4F6          	movff	postinc2,tblptrl
  1551  002970  C4DD F4F7          	movff	postdec2,tblptrh
  1552  002974                     	if	0	;tblptru may be non-zero
  1553  002974                     	endif
  1554  002974                     	if	0	;tblptru may be non-zero
  1555  002974                     	endif
  1556  002974  0008               	tblrd		*
  1557  002976  50F5               	movf	tablat,w,c
  1558  002978  6E02               	movwf	fputc@c^(0+1280),c
  1559  00297A  6A03               	clrf	(fputc@c+1)^(0+1280),c
  1560  00297C  C513  F504         	movff	vfpfcnvrt@fp,fputc@fp
  1561  002980  C514  F505         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1562  002984  EC3A  F015         	call	_fputc	;wreg free
  1563  002988                     
  1564                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1565  002988  0061  F454  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  1566  00298E  0061  F458  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1567  002994  2ADE               	incf	postinc2,f,c
  1568  002996  0E00               	movlw	0
  1569  002998  22DD               	addwfc	postdec2,f,c
  1570  00299A  EF9B  F014         	goto	l1183
  1571  00299E                     l809:
  1572  00299E  0012               	return		;funcret
  1573  0029A0                     __end_of_vfpfcnvrt:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _ctoa *****************
  1577 ;; Defined at:
  1578 ;;		line 259 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  1581 ;;		 -> NULL(0), 
  1582 ;;  c               1   12[COMRAM] unsigned char 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  w               2   16[COMRAM] int 
  1585 ;;  l               2   14[COMRAM] int 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  2   10[COMRAM] int 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1595 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1596 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1598 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1599 ;;Total ram usage:        8 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    2
  1602 ;; This function calls:
  1603 ;;		_fputc
  1604 ;; This function is called by:
  1605 ;;		_vfpfcnvrt
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text7
  1610  0029A0                     __ptext7:
  1611                           	callstack 0
  1612  0029A0                     _ctoa:
  1613                           	callstack 122
  1614  0029A0                     
  1615                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  1616  0029A0  5044               	movf	_width^(0+1280),w,c
  1617  0029A2  1045               	iorwf	(_width+1)^(0+1280),w,c
  1618  0029A4  A4D8               	btfss	status,2,c
  1619  0029A6  EFD7  F014         	goto	u361
  1620  0029AA  EFD9  F014         	goto	u360
  1621  0029AE                     u361:
  1622  0029AE  EFDF  F014         	goto	l1137
  1623  0029B2                     u360:
  1624  0029B2  C544  F511         	movff	_width,ctoa@w
  1625  0029B6  C545  F512         	movff	_width+1,ctoa@w+1
  1626  0029BA  EFE5  F014         	goto	l1139
  1627  0029BE                     l1137:
  1628  0029BE  0EFF               	movlw	255
  1629  0029C0  2444               	addwf	_width^(0+1280),w,c
  1630  0029C2  6E11               	movwf	ctoa@w^(0+1280),c
  1631  0029C4  0EFF               	movlw	255
  1632  0029C6  2045               	addwfc	(_width+1)^(0+1280),w,c
  1633  0029C8  6E12               	movwf	(ctoa@w+1)^(0+1280),c
  1634  0029CA                     l1139:
  1635                           
  1636                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  1637  0029CA  A048               	btfss	_flags^(0+1280),0,c
  1638  0029CC  EFEA  F014         	goto	u371
  1639  0029D0  EFEC  F014         	goto	u370
  1640  0029D4                     u371:
  1641  0029D4  EFF5  F014         	goto	l1143
  1642  0029D8                     u370:
  1643  0029D8                     
  1644                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  1645  0029D8  C50D  F502         	movff	ctoa@c,fputc@c
  1646  0029DC  6A03               	clrf	(fputc@c+1)^(0+1280),c
  1647  0029DE  C50B  F504         	movff	ctoa@fp,fputc@fp
  1648  0029E2  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
  1649  0029E6  EC3A  F015         	call	_fputc	;wreg free
  1650  0029EA                     l1143:
  1651                           
  1652                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  1653  0029EA  BE12               	btfsc	(ctoa@w+1)^(0+1280),7,c
  1654  0029EC  EFFA  F014         	goto	u381
  1655  0029F0  EFFC  F014         	goto	u380
  1656  0029F4                     u381:
  1657  0029F4  EFFE  F014         	goto	l1147
  1658  0029F8                     u380:
  1659  0029F8  EF02  F015         	goto	l799
  1660  0029FC                     l1147:
  1661  0029FC  0E00               	movlw	0
  1662  0029FE  6E12               	movwf	(ctoa@w+1)^(0+1280),c
  1663  002A00  0E00               	movlw	0
  1664  002A02  6E11               	movwf	ctoa@w^(0+1280),c
  1665  002A04                     l799:
  1666                           
  1667                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  1668  002A04  0E00               	movlw	0
  1669  002A06  6E10               	movwf	(ctoa@l+1)^(0+1280),c
  1670  002A08  0E00               	movlw	0
  1671  002A0A  6E0F               	movwf	ctoa@l^(0+1280),c
  1672                           
  1673                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  1674  002A0C  EF14  F015         	goto	l1153
  1675  002A10                     l1149:
  1676                           
  1677                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  1678  002A10  0E00               	movlw	0
  1679  002A12  6E03               	movwf	(fputc@c+1)^(0+1280),c
  1680  002A14  0E20               	movlw	32
  1681  002A16  6E02               	movwf	fputc@c^(0+1280),c
  1682  002A18  C50B  F504         	movff	ctoa@fp,fputc@fp
  1683  002A1C  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
  1684  002A20  EC3A  F015         	call	_fputc	;wreg free
  1685  002A24                     
  1686                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  1687  002A24  4A0F               	infsnz	ctoa@l^(0+1280),f,c
  1688  002A26  2A10               	incf	(ctoa@l+1)^(0+1280),f,c
  1689  002A28                     l1153:
  1690                           
  1691                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  1692  002A28  5011               	movf	ctoa@w^(0+1280),w,c
  1693  002A2A  5C0F               	subwf	ctoa@l^(0+1280),w,c
  1694  002A2C  5010               	movf	(ctoa@l+1)^(0+1280),w,c
  1695  002A2E  0A80               	xorlw	128
  1696  002A30  6E0E               	movwf	??_ctoa^(0+1280),c
  1697  002A32  5012               	movf	(ctoa@w+1)^(0+1280),w,c
  1698  002A34  0A80               	xorlw	128
  1699  002A36  580E               	subwfb	??_ctoa^(0+1280),w,c
  1700  002A38  A0D8               	btfss	status,0,c
  1701  002A3A  EF21  F015         	goto	u391
  1702  002A3E  EF23  F015         	goto	u390
  1703  002A42                     u391:
  1704  002A42  EF08  F015         	goto	l1149
  1705  002A46                     u390:
  1706  002A46                     
  1707                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  1708  002A46  B048               	btfsc	_flags^(0+1280),0,c
  1709  002A48  EF28  F015         	goto	u401
  1710  002A4C  EF2A  F015         	goto	u400
  1711  002A50                     u401:
  1712  002A50  EF33  F015         	goto	l1157
  1713  002A54                     u400:
  1714  002A54                     
  1715                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  1716  002A54  C50D  F502         	movff	ctoa@c,fputc@c
  1717  002A58  6A03               	clrf	(fputc@c+1)^(0+1280),c
  1718  002A5A  C50B  F504         	movff	ctoa@fp,fputc@fp
  1719  002A5E  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
  1720  002A62  EC3A  F015         	call	_fputc	;wreg free
  1721  002A66                     l1157:
  1722                           
  1723                           ;D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  1724  002A66  0E01               	movlw	1
  1725  002A68  240F               	addwf	ctoa@l^(0+1280),w,c
  1726  002A6A  6E0B               	movwf	?_ctoa^(0+1280),c
  1727  002A6C  0E00               	movlw	0
  1728  002A6E  2010               	addwfc	(ctoa@l+1)^(0+1280),w,c
  1729  002A70  6E0C               	movwf	(?_ctoa+1)^(0+1280),c
  1730  002A72  0012               	return		;funcret
  1731  002A74                     __end_of_ctoa:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _fputc *****************
  1735 ;; Defined at:
  1736 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  c               2    1[COMRAM] int 
  1739 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1740 ;;		 -> NULL(0), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    1[COMRAM] int 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1754 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1755 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1756 ;;Total ram usage:        9 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    1
  1759 ;; This function calls:
  1760 ;;		_putch
  1761 ;; This function is called by:
  1762 ;;		_ctoa
  1763 ;;		_vfpfcnvrt
  1764 ;;		_fputs
  1765 ;;		_puts
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text8
  1770  002A74                     __ptext8:
  1771                           	callstack 0
  1772  002A74                     _fputc:
  1773                           	callstack 124
  1774  002A74  5004               	movf	fputc@fp^(0+1280),w,c
  1775  002A76  1005               	iorwf	(fputc@fp+1)^(0+1280),w,c
  1776  002A78  B4D8               	btfsc	status,2,c
  1777  002A7A  EF41  F015         	goto	u321
  1778  002A7E  EF43  F015         	goto	u320
  1779  002A82                     u321:
  1780  002A82  EF4C  F015         	goto	l1121
  1781  002A86                     u320:
  1782  002A86  5004               	movf	fputc@fp^(0+1280),w,c
  1783  002A88  1005               	iorwf	(fputc@fp+1)^(0+1280),w,c
  1784  002A8A  A4D8               	btfss	status,2,c
  1785  002A8C  EF4A  F015         	goto	u331
  1786  002A90  EF4C  F015         	goto	u330
  1787  002A94                     u331:
  1788  002A94  EF51  F015         	goto	l1123
  1789  002A98                     u330:
  1790  002A98                     l1121:
  1791  002A98  5002               	movf	fputc@c^(0+1280),w,c
  1792  002A9A  EC76  F016         	call	_putch
  1793  002A9E  EF84  F015         	goto	l1129
  1794  002AA2                     l1123:
  1795  002AA2  EE20 F004          	lfsr	2,4
  1796  002AA6  5004               	movf	fputc@fp^(0+1280),w,c
  1797  002AA8  26D9               	addwf	fsr2l,f,c
  1798  002AAA  5005               	movf	(fputc@fp+1)^(0+1280),w,c
  1799  002AAC  22DA               	addwfc	fsr2h,f,c
  1800  002AAE  50DE               	movf	postinc2,w,c
  1801  002AB0  10DE               	iorwf	postinc2,w,c
  1802  002AB2  B4D8               	btfsc	status,2,c
  1803  002AB4  EF5E  F015         	goto	u341
  1804  002AB8  EF60  F015         	goto	u340
  1805  002ABC                     u341:
  1806  002ABC  EF7B  F015         	goto	l1127
  1807  002AC0                     u340:
  1808  002AC0  EE20 F004          	lfsr	2,4
  1809  002AC4  5004               	movf	fputc@fp^(0+1280),w,c
  1810  002AC6  26D9               	addwf	fsr2l,f,c
  1811  002AC8  5005               	movf	(fputc@fp+1)^(0+1280),w,c
  1812  002ACA  22DA               	addwfc	fsr2h,f,c
  1813  002ACC  EE10 F002          	lfsr	1,2
  1814  002AD0  5004               	movf	fputc@fp^(0+1280),w,c
  1815  002AD2  26E1               	addwf	fsr1l,f,c
  1816  002AD4  5005               	movf	(fputc@fp+1)^(0+1280),w,c
  1817  002AD6  22E2               	addwfc	fsr1h,f,c
  1818  002AD8  50DE               	movf	postinc2,w,c
  1819  002ADA  5CE6               	subwf	postinc1,w,c
  1820  002ADC  50E6               	movf	postinc1,w,c
  1821  002ADE  0A80               	xorlw	128
  1822  002AE0  6E0A               	movwf	(??_fputc+4)^(0+1280),c
  1823  002AE2  50DE               	movf	postinc2,w,c
  1824  002AE4  0A80               	xorlw	128
  1825  002AE6  580A               	subwfb	(??_fputc+4)^(0+1280),w,c
  1826  002AE8  B0D8               	btfsc	status,0,c
  1827  002AEA  EF79  F015         	goto	u351
  1828  002AEE  EF7B  F015         	goto	u350
  1829  002AF2                     u351:
  1830  002AF2  EF84  F015         	goto	l1129
  1831  002AF6                     u350:
  1832  002AF6                     l1127:
  1833  002AF6  EE20 F002          	lfsr	2,2
  1834  002AFA  5004               	movf	fputc@fp^(0+1280),w,c
  1835  002AFC  26D9               	addwf	fsr2l,f,c
  1836  002AFE  5005               	movf	(fputc@fp+1)^(0+1280),w,c
  1837  002B00  22DA               	addwfc	fsr2h,f,c
  1838  002B02  2ADE               	incf	postinc2,f,c
  1839  002B04  0E00               	movlw	0
  1840  002B06  22DD               	addwfc	postdec2,f,c
  1841  002B08                     l1129:
  1842  002B08  C502  F502         	movff	fputc@c,?_fputc
  1843  002B0C  6A03               	clrf	(?_fputc+1)^(0+1280),c
  1844  002B0E  0012               	return		;funcret
  1845  002B10                     __end_of_fputc:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _putch *****************
  1849 ;; Defined at:
  1850 ;;		line 127 in file "main.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  data            1    wreg     unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  data            1    0[COMRAM] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1868 ;;Total ram usage:        1 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_fputc
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text9
  1878  002CEC                     __ptext9:
  1879                           	callstack 0
  1880  002CEC                     _putch:
  1881                           	callstack 124
  1882                           
  1883                           ;incstack = 0
  1884                           ;putch@data stored from wreg
  1885  002CEC  6E01               	movwf	putch@data^(0+1280),c
  1886  002CEE                     l45:
  1887  002CEE  0102               	movlb	2	; () banked
  1888  002CF0  B9B0               	btfsc	176,4,b	;volatile
  1889  002CF2  EF7D  F016         	goto	u311
  1890  002CF6  EF7F  F016         	goto	u310
  1891  002CFA                     u311:
  1892  002CFA  EF77  F016         	goto	l45
  1893  002CFE                     u310:
  1894  002CFE                     
  1895                           ; BSR set to: 2
  1896                           ;main.c: 133:     U1TXB = data;
  1897  002CFE  0061  F404  F2A3   	movff	putch@data,675	;volatile
  1898  002D04                     
  1899                           ; BSR set to: 2
  1900  002D04  0012               	return		;funcret
  1901  002D06                     __end_of_putch:
  1902                           	callstack 0
  1903                           
  1904                           	psect	rparam
  1905  0000                     
  1906                           	psect	idloc
  1907                           
  1908                           ;Config register IDLOC0 @ 0x200000
  1909                           ;	unspecified, using default values
  1910  200000                     	org	2097152
  1911  200000  0FFF               	dw	4095
  1912                           
  1913                           ;Config register IDLOC1 @ 0x200002
  1914                           ;	unspecified, using default values
  1915  200002                     	org	2097154
  1916  200002  0FFF               	dw	4095
  1917                           
  1918                           ;Config register IDLOC2 @ 0x200004
  1919                           ;	unspecified, using default values
  1920  200004                     	org	2097156
  1921  200004  0FFF               	dw	4095
  1922                           
  1923                           ;Config register IDLOC3 @ 0x200006
  1924                           ;	unspecified, using default values
  1925  200006                     	org	2097158
  1926  200006  0FFF               	dw	4095
  1927                           
  1928                           ;Config register IDLOC4 @ 0x200008
  1929                           ;	unspecified, using default values
  1930  200008                     	org	2097160
  1931  200008  0FFF               	dw	4095
  1932                           
  1933                           ;Config register IDLOC5 @ 0x20000A
  1934                           ;	unspecified, using default values
  1935  20000A                     	org	2097162
  1936  20000A  0FFF               	dw	4095
  1937                           
  1938                           ;Config register IDLOC6 @ 0x20000C
  1939                           ;	unspecified, using default values
  1940  20000C                     	org	2097164
  1941  20000C  0FFF               	dw	4095
  1942                           
  1943                           ;Config register IDLOC7 @ 0x20000E
  1944                           ;	unspecified, using default values
  1945  20000E                     	org	2097166
  1946  20000E  0FFF               	dw	4095
  1947                           
  1948                           ;Config register IDLOC8 @ 0x200010
  1949                           ;	unspecified, using default values
  1950  200010                     	org	2097168
  1951  200010  0FFF               	dw	4095
  1952                           
  1953                           ;Config register IDLOC9 @ 0x200012
  1954                           ;	unspecified, using default values
  1955  200012                     	org	2097170
  1956  200012  0FFF               	dw	4095
  1957                           
  1958                           ;Config register IDLOC10 @ 0x200014
  1959                           ;	unspecified, using default values
  1960  200014                     	org	2097172
  1961  200014  0FFF               	dw	4095
  1962                           
  1963                           ;Config register IDLOC11 @ 0x200016
  1964                           ;	unspecified, using default values
  1965  200016                     	org	2097174
  1966  200016  0FFF               	dw	4095
  1967                           
  1968                           ;Config register IDLOC12 @ 0x200018
  1969                           ;	unspecified, using default values
  1970  200018                     	org	2097176
  1971  200018  0FFF               	dw	4095
  1972                           
  1973                           ;Config register IDLOC13 @ 0x20001A
  1974                           ;	unspecified, using default values
  1975  20001A                     	org	2097178
  1976  20001A  0FFF               	dw	4095
  1977                           
  1978                           ;Config register IDLOC14 @ 0x20001C
  1979                           ;	unspecified, using default values
  1980  20001C                     	org	2097180
  1981  20001C  0FFF               	dw	4095
  1982                           
  1983                           ;Config register IDLOC15 @ 0x20001E
  1984                           ;	unspecified, using default values
  1985  20001E                     	org	2097182
  1986  20001E  0FFF               	dw	4095
  1987                           
  1988                           	psect	config
  1989                           
  1990                           ;Config register CONFIG1 @ 0x300000
  1991                           ;	External Oscillator Selection
  1992                           ;	FEXTOSC = OFF, Oscillator not enabled
  1993                           ;	Reset Oscillator Selection
  1994                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  1995  300000                     	org	3145728
  1996  300000  8C                 	db	140
  1997                           
  1998                           ;Config register CONFIG2 @ 0x300001
  1999                           ;	Clock out Enable bit
  2000                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2001                           ;	PRLOCKED One-Way Set Enable bit
  2002                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2003                           ;	Clock Switch Enable bit
  2004                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  2005                           ;	Fail-Safe Clock Monitor Enable bit
  2006                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2007  300001                     	org	3145729
  2008  300001  D7                 	db	215
  2009                           
  2010                           ;Config register CONFIG3 @ 0x300002
  2011                           ;	MCLR Enable bit
  2012                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2013                           ;	Power-up timer selection bits
  2014                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2015                           ;	Multi-vector enable bit
  2016                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2017                           ;	IVTLOCK bit One-way set enable bit
  2018                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2019                           ;	Low Power BOR Enable bit
  2020                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2021                           ;	Brown-out Reset Enable bits
  2022                           ;	BOREN = OFF, Brown-out Reset disabled
  2023  300002                     	org	3145730
  2024  300002  37                 	db	55
  2025                           
  2026                           ;Config register CONFIG4 @ 0x300003
  2027                           ;	Brown-out Reset Voltage Selection bits
  2028                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2029                           ;	ZCD Disable bit
  2030                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2031                           ;	PPSLOCK bit One-Way Set Enable bit
  2032                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2033                           ;	Stack Full/Underflow Reset Enable bit
  2034                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2035                           ;	Low Voltage Programming Enable bit
  2036                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2037                           ;	Extended Instruction Set Enable bit
  2038                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2039  300003                     	org	3145731
  2040  300003  DF                 	db	223
  2041                           
  2042                           ;Config register CONFIG5 @ 0x300004
  2043                           ;	WDT Period selection bits
  2044                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2045                           ;	WDT operating mode
  2046                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2047  300004                     	org	3145732
  2048  300004  9F                 	db	159
  2049                           
  2050                           ;Config register CONFIG6 @ 0x300005
  2051                           ;	WDT Window Select bits
  2052                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2053                           ;	WDT input clock selector
  2054                           ;	WDTCCS = SC, Software Control
  2055  300005                     	org	3145733
  2056  300005  FF                 	db	255
  2057                           
  2058                           ;Config register CONFIG7 @ 0x300006
  2059                           ;	Boot Block Size selection bits
  2060                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2061                           ;	Boot Block enable bit
  2062                           ;	BBEN = OFF, Boot block disabled
  2063                           ;	Storage Area Flash enable bit
  2064                           ;	SAFEN = OFF, SAF disabled
  2065                           ;	Background Debugger
  2066                           ;	DEBUG = OFF, Background Debugger disabled
  2067  300006                     	org	3145734
  2068  300006  FF                 	db	255
  2069                           
  2070                           ;Config register CONFIG8 @ 0x300007
  2071                           ;	Boot Block Write Protection bit
  2072                           ;	WRTB = OFF, Boot Block not Write protected
  2073                           ;	Configuration Register Write Protection bit
  2074                           ;	WRTC = OFF, Configuration registers not Write protected
  2075                           ;	Data EEPROM Write Protection bit
  2076                           ;	WRTD = OFF, Data EEPROM not Write protected
  2077                           ;	SAF Write protection bit
  2078                           ;	WRTSAF = OFF, SAF not Write Protected
  2079                           ;	Application Block write protection bit
  2080                           ;	WRTAPP = OFF, Application Block not write protected
  2081  300007                     	org	3145735
  2082  300007  FF                 	db	255
  2083                           
  2084                           ; Padding undefined space
  2085  300008                     	org	3145736
  2086  300008  FF                 	db	255
  2087                           
  2088                           ;Config register CONFIG10 @ 0x300009
  2089                           ;	PFM and Data EEPROM Code Protection bit
  2090                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2091  300009                     	org	3145737
  2092  300009  FF                 	db	255
  2093                           tosu	equ	0x4FF
  2094                           tosh	equ	0x4FE
  2095                           tosl	equ	0x4FD
  2096                           stkptr	equ	0x4FC
  2097                           pclatu	equ	0x4FB
  2098                           pclath	equ	0x4FA
  2099                           pcl	equ	0x4F9
  2100                           tblptru	equ	0x4F8
  2101                           tblptrh	equ	0x4F7
  2102                           tblptrl	equ	0x4F6
  2103                           tablat	equ	0x4F5
  2104                           prodh	equ	0x4F4
  2105                           prodl	equ	0x4F3
  2106                           indf0	equ	0x4EF
  2107                           postinc0	equ	0x4EE
  2108                           postdec0	equ	0x4ED
  2109                           preinc0	equ	0x4EC
  2110                           plusw0	equ	0x4EB
  2111                           fsr0h	equ	0x4EA
  2112                           fsr0l	equ	0x4E9
  2113                           wreg	equ	0x4E8
  2114                           indf1	equ	0x4E7
  2115                           postinc1	equ	0x4E6
  2116                           postdec1	equ	0x4E5
  2117                           preinc1	equ	0x4E4
  2118                           plusw1	equ	0x4E3
  2119                           fsr1h	equ	0x4E2
  2120                           fsr1l	equ	0x4E1
  2121                           bsr	equ	0x4E0
  2122                           indf2	equ	0x4DF
  2123                           postinc2	equ	0x4DE
  2124                           postdec2	equ	0x4DD
  2125                           preinc2	equ	0x4DC
  2126                           plusw2	equ	0x4DB
  2127                           fsr2h	equ	0x4DA
  2128                           fsr2l	equ	0x4D9
  2129                           status	equ	0x4D8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      73
    BANK5           160      0      32
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[3]), STR_2(CODE[3]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> main@cmd(COMRAM[20]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_14(CODE[15]), STR_13(CODE[26]), STR_11(CODE[26]), STR_9(CODE[26]), 
		 -> STR_7(CODE[26]), STR_5(CODE[26]), STR_3(CODE[26]), STR_1(CODE[24]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_14(CODE[15]), STR_13(CODE[26]), STR_11(CODE[26]), STR_9(CODE[26]), 
		 -> STR_7(CODE[26]), STR_5(CODE[26]), STR_3(CODE[26]), STR_1(CODE[24]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S765_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _puts->_fputs
    _fputs->_fputc
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_fputc
    _fputc->_putch

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    9587
                                             43 COMRAM    22    22      0
                             _printf
                               _puts
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     1      4    1024
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _puts                                                 5     3      2    3954
                                             19 COMRAM     5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (2) _fputs                                                9     5      4    1905
                                             10 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    4151
                                             35 COMRAM     8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    4021
                                             27 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    3668
                                             18 COMRAM     9     3      6
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1743
                                             10 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (3) _fputc                                                9     5      4    1388
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
         _fputc
           _putch
   _puts
     _fputc
       _putch
     _fputs
       _fputc
         _putch
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK24          100      0       0      43        0.0%
BANK24             100      0       0      44        0.0%
BITBANK23          100      0       0      41        0.0%
BANK23             100      0       0      42        0.0%
BITBANK22          100      0       0      39        0.0%
BANK22             100      0       0      40        0.0%
BITBANK21          100      0       0      37        0.0%
BANK21             100      0       0      38        0.0%
BITBANK20          100      0       0      35        0.0%
BANK20             100      0       0      36        0.0%
BITBANK19          100      0       0      33        0.0%
BANK19             100      0       0      34        0.0%
BITBANK18          100      0       0      31        0.0%
BANK18             100      0       0      32        0.0%
BITBANK17          100      0       0      29        0.0%
BANK17             100      0       0      30        0.0%
BITBANK16          100      0       0      27        0.0%
BANK16             100      0       0      28        0.0%
BITBANK15          100      0       0      25        0.0%
BANK15             100      0       0      26        0.0%
BITBANK14          100      0       0      23        0.0%
BANK14             100      0       0      24        0.0%
BITBANK13          100      0       0      21        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      19        0.0%
BANK12             100      0       0      20        0.0%
BITBANK11          100      0       0      17        0.0%
BANK11             100      0       0      18        0.0%
BITBANK10          100      0       0      15        0.0%
BANK10             100      0       0      16        0.0%
BITBANK9           100      0       0      13        0.0%
BANK9              100      0       0      14        0.0%
BITBANK8           100      0       0      11        0.0%
BANK8              100      0       0      12        0.0%
BITBANK7           100      0       0       9        0.0%
BANK7              100      0       0      10        0.0%
BITBANK6           100      0       0       7        0.0%
BANK6              100      0       0       8        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      49       1       76.8%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69       6        0.0%
DATA                 0      0      69       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Nov 10 15:00:10 2020

                     l45 2CEE                       l48 2D04                       l56 2620  
                     l58 2630                      l802 2A46                      l804 2A72  
                    l815 2BEC                      l816 2BF4                      l809 299E  
                    l835 2C48                      l828 2B0E                      l836 2C50  
                    l844 2C9E                      l845 2C9E                      l853 2B92  
                    l758 2CEA                      l799 2A04                      u310 2CFE  
                    u311 2CFA                      u320 2A86                      u400 2A54  
                    u321 2A82                      u401 2A50                      u330 2A98  
                    u410 283C                      u331 2A94                      u411 2838  
                    u340 2AC0                      u420 288A                      u500 261C  
                    u341 2ABC                      u421 2886                      u501 2618  
                    u350 2AF6                      u430 2910                      u510 2630  
                    u351 2AF2                      u431 290C                      u511 262C  
                    u360 29B2                      u440 2BEC                      u600 27E6  
                    u520 264A                      u361 29AE                      u441 2BE8  
                    u601 27E2                      u521 2646                      u370 29D8  
                    u450 2C48                      u530 2670                      u371 29D4  
                    u451 2C44                      u531 266C                      u380 29F8  
                    u460 2C78                      u540 26A8                      u381 29F4  
                    u461 2C74                      u541 26A4                      u390 2A46  
                    u470 2C9A                      u550 26E0                      u391 2A42  
                    u471 2C96                      u551 26DC                      u480 2B4C  
                    u560 2718                      u481 2B48                      u561 2714  
                    u490 2B68                      u570 2750                      u491 2B64  
                    u571 274C                      u580 278A                      u581 2786  
                    u590 27D0                      u591 27CC                      wreg 0004E8  
                   l1113 2CEE                     l1121 2A98                     l1201 2B94  
                   l1115 2CFE                     l1123 2AA2                     l1203 2B9C  
                   l1211 2C02                     l1125 2AC0                     l1117 2A74  
                   l1141 29D8                     l1133 29A0                     l1205 2BA8  
                   l1213 2C14                     l1221 2C78                     l1301 264A  
                   l1127 2AF6                     l1119 2A86                     l1151 2A24  
                   l1143 29EA                     l1135 29B2                     l1207 2BCC  
                   l1215 2C18                     l1223 2C9A                     l1231 2B1C  
                   l1311 26B4                     l1303 2670                     l1129 2B08  
                   l1153 2A28                     l1137 29BE                     l1161 2814  
                   l1241 2CCE                     l1209 2BF6                     l1217 2C52  
                   l1233 2B4C                     l1321 2718                     l1313 26BA  
                   l1305 267C                     l1155 2A54                     l1147 29FC  
                   l1139 29CA                     l1171 288A                     l1163 283C  
                   l1219 2C56                     l1235 2B68                     l1227 2B10  
                   l1331 275E                     l1323 2724                     l1315 26E0  
                   l1307 2682                     l1251 25B2                     l1157 2A66  
                   l1149 2A10                     l1181 2922                     l1173 28CC  
                   l1165 284E                     l1229 2B14                     l1341 279E  
                   l1333 2764                     l1325 272A                     l1317 26EC  
                   l1309 26A8                     l1261 25C6                     l1253 25B8  
                   l1245 25A4                     l1183 2936                     l1167 285E  
                   l1239 2CC6                     l1351 27BE                     l1335 278A  
                   l1327 2750                     l1319 26F2                     l1343 27AA  
                   l1271 25DA                     l1263 25C8                     l1255 25BA  
                   l1247 25A4                     l1177 28E8                     l1169 2862  
                   l1193 2960                     l1361 27F8                     l1353 27C0  
                   l1337 2796                     l1329 275C                     l1281 25E8  
                   l1273 25DC                     l1265 25CE                     l1257 25BC  
                   l1249 25AC                     l1195 2988                     l1179 2910  
                   l1187 2942                     l1363 280A                     l1339 2798  
                   l1291 25FA                     l1283 25EA                     l1275 25DE  
                   l1267 25D2                     l1259 25C2                     l1189 2954  
                   l1349 27AE                     l1357 27D4                     l1293 260A  
                   l1285 25F6                     l1277 25E0                     l1269 25D6  
                   l1359 27E6                     l1295 260C                     l1279 25E4  
                   l1297 261C                     l1299 2638                     STR_1 2569  
                   STR_2 259D                     STR_3 251B                     STR_4 2597  
                   STR_5 254F                     STR_6 259A                     STR_7 2501  
                   STR_8 2592                     STR_9 2535                     _LATD 0004C1  
                   _dbuf 0560                     _ctoa 29A0                     _main 25A4  
                   _prec 0546                     _nout 0542                     fsr1h 0004E2  
                   fsr2h 0004DA                     indf2 0004DF                     fsr1l 0004E1  
                   fsr2l 0004D9                     _puts 2C52                     start FFFC  
           ___param_bank 000000                    ?_ctoa 050B                    ?_main 0501  
                  STR_10 2595                    STR_11 2535                    STR_12 2590  
                  STR_13 2535                    STR_14 2581                    STR_15 25A0  
                  ?_puts 0514                    _U1RXB 0002A1                    _U1TXB 0002A3  
           vfpfcnvrt@fmt 0515                    _TRISD 0004C9                    _flags 0548  
                  _fputc 2A74                    _fputs 2BF6                    _width 0544  
                  ctoa@c 050D                    _putch 2CEC                    ctoa@l 050F  
                  main@c 0540                    ctoa@w 0511                    main@i 0541  
                  tablat 0004F5                    puts@s 0514                    status 0004D8  
        __initialization 2CA0             __end_of_ctoa 2A74             __end_of_main 2814  
           __end_of_puts 2CA0                   ??_ctoa 050E                   ??_main 052C  
                 ??_puts 0516            __activetblptr 000001                   ?_fputc 0502  
                 ?_fputs 050B                   ?_putch 0501                   _ANSELD 000418  
                 _U1CON0 0002AB                   _U1CON1 0002AC                   _U1CON2 0002AD  
                 _U1BRGH 0002AF                   _U1BRGL 0002AE                   _RF0PPS 000229  
           vfprintf@cfmt 0522                   clear_0 2CA6                   clear_1 2CB2  
                 _printf 2CC6                   ctoa@fp 050B                   _strcmp 2B10  
                 fputc@c 0502                   fputs@c 0511                   fputs@i 0512  
                 fputs@s 050B             __mediumconst 0000                   tblptrh 0004F7  
                 tblptrl 0004F6                   tblptru 0004F8         __end_of_vfprintf 2BF6  
             __accesstop 0560  __end_of__initialization 2CB8            ___rparam_used 000001  
         __pcstackCOMRAM 0501            __end_of_fputc 2B10            __end_of_fputs 2C52  
          __end_of_putch 2D06                  ??_fputc 0506                  ??_fputs 050F  
                ??_putch 0501               __pbssBANK5 0560                  ?_printf 0524  
                ?_strcmp 0501                  _U1RXPPS 000272       __size_of_vfpfcnvrt 018C  
                __Hparam 0000                  __Lparam 0000                ?_vfprintf 051C  
           __psmallconst 2500                  __pcinit 2CA0                  __ramtop 2500  
                __ptext0 25A4                  __ptext1 2B10                  __ptext2 2C52  
                __ptext3 2BF6                  __ptext4 2CC6                  __ptext5 2B94  
                __ptext6 2814                  __ptext7 29A0                  __ptext8 2A74  
                __ptext9 2CEC          __size_of_printf 0026          __size_of_strcmp 0084  
                main@cmd 052C     end_of_initialization 2CB8                  fputc@fp 0504  
                fputs@fp 050D        __end_of_vfpfcnvrt 29A0                  postdec2 0004DD  
                postinc0 0004EE                  postinc1 0004E6                  postinc2 0004DE  
             ??_vfprintf 0522                  strcmp@l 0501                  strcmp@r 0503  
              _TRISFbits 0004CB              vfpfcnvrt@ap 0517              vfpfcnvrt@fp 0513  
         __end_of_printf 2CEC           __end_of_strcmp 2B94      start_initialization 2CA0  
            vfprintf@fmt 051E                 ??_printf 0528                 ??_strcmp 0505  
            __pbssCOMRAM 0542        __size_of_vfprintf 0062              __smallconst 2500  
         __size_of_fputc 009C           __size_of_fputs 005C           __size_of_putch 001A  
               _LATDbits 0004C1                _vfpfcnvrt 2814               vfpfcnvrt@c 051B  
               __Hrparam 0000               vfprintf@ap 0520                 __Lrparam 0000  
             vfprintf@fp 051C             __Lsmallconst 2500               ?_vfpfcnvrt 0513  
             _ANSELFbits 000428               _U1CON0bits 0002AB               _U1CON1bits 0002AC  
             _U1FIFObits 0002B0            __size_of_ctoa 00D4            __size_of_main 0270  
          __size_of_puts 004E                 _puts$872 0518                 _vfprintf 2B94  
              printf@fmt 0524                putch@data 0501                 printf@ap 052A  
            ??_vfpfcnvrt 0519  
